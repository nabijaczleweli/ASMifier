buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'

if(System.getenv().BUILD_NUMBER != null)
	build_number = System.getenv().BUILD_NUMBER

version = "${mc_version}-${build_number}"
group = "com.nabijaczleweli.minecrasmer" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MineCrASMer"

minecraft {
    version = "${mc_version}-10.13.2.${forge_build}"
    assetDir = "eclipse/assets"

    replaceIn "Reference.scala"
    replace "@MODNAME@", archivesBaseName
    replace "@MODVER@", project.version
}

repositories {
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }

    maven {
        name = "maven2"
        url = "http://repo1.maven.org/maven2"
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    dependencies {
        compile "codechicken:NotEnoughItems:${mc_version}-1.0.3.63:dev"
        compile "org.reflections:reflections:0.9.9"
    }
}

task copyChicken(type: Copy, dependsOn: "extractUserDev") {
    from { configurations.compile }
    include "**/*NotEnoughItems*.jar"
    into file(minecraft.runDir + "/mods")
    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}

tasks.setupDevWorkspace.dependsOn copyChicken
tasks.setupDecompWorkspace.dependsOn copyChicken

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'dev'
}

artifacts {
	archives devJar
}
