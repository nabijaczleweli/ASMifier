buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'net.minecraftforge.gradle.forge'

if(System.getenv().BUILD_NUMBER != null)
	build_number = System.getenv().BUILD_NUMBER

version = "${mc_version}-${build_number}"
group = "com.nabijaczleweli.minecrasmer"  // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MineCrASMer"

minecraft {
    version = "${mc_version}-11.15.1.${forge_build}"
    runDir = "eclipse"

    mappings = "stable_22"

    replaceIn "Reference.scala"
    replace "@MODNAME@", archivesBaseName
    replace "@MODVER@", project.version
}

repositories {
    maven {
        name = "maven2"
        url = "http://repo1.maven.org/maven2"
    }

    maven {
        name = "MineMaarten repo"
        url = "http://maven.k-4u.nl/"
    }

    maven {
        name = "Amadornes repo"
        url = "http://maven.amadornes.com/"
    }

    maven {
        name = "CLI repo"
        url = "http://maven.cil.li/"
    }

    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }

    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
}

dependencies {
    compile "org.reflections:reflections:0.9.9"

    compile "pneumaticCraft:PneumaticCraft-1.8.9:1.13.8-12:api"
    compile "mcp.mobius.waila:Waila:1.6.0-B3_1.8.8"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'dev'
}

artifacts {
	archives devJar
}
