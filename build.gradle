buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'net.minecraftforge.gradle.forge'

if(System.getenv().BUILD_NUMBER != null)
	build_number = System.getenv().BUILD_NUMBER

version = "${mc_version}-${build_number}"
group = "com.nabijaczleweli.minecrasmer" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MineCrASMer"

minecraft {
    version = "${mc_version}-11.15.1.${forge_build}"
    runDir = "eclipse"

    mappings = "stable_22"

    replaceIn "Reference.scala"
    replace "@MODNAME@", archivesBaseName
    replace "@MODVER@", project.version
}

repositories {
    maven {
        name = "maven2"
        url = "http://repo1.maven.org/maven2"
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile "org.reflections:reflections:0.9.9"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task devJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'dev'
}

artifacts {
	archives devJar
}
